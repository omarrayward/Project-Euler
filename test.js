// Generated by CoffeeScript 1.8.0
var sieve, start_problem, sub_string_divisibility;

start_problem = function(num) {
  console.log("");
  console.log("Euler ", num);
  return console.log("");
};

sieve = function(num) {
  var ele, elem, ind, index, list_of_nums, new_index, primes, _i, _j, _len, _len1;
  list_of_nums = (function() {
    var _i, _results;
    _results = [];
    for (ele = _i = 0; 0 <= num ? _i <= num : _i >= num; ele = 0 <= num ? ++_i : --_i) {
      _results.push(true);
    }
    return _results;
  })();
  list_of_nums[0] = false;
  list_of_nums[1] = false;
  for (index = _i = 0, _len = list_of_nums.length; _i < _len; index = ++_i) {
    ele = list_of_nums[index];
    if (ele === true) {
      new_index = index;
      while (new_index < list_of_nums.length) {
        new_index += index;
        if (list_of_nums[new_index]) {
          list_of_nums[new_index] = false;
        }
      }
    }
  }
  primes = [];
  for (ind = _j = 0, _len1 = list_of_nums.length; _j < _len1; ind = ++_j) {
    elem = list_of_nums[ind];
    if (elem === true) {
      primes.push(ind);
    }
  }
  return primes;
};

start_problem(43);

sub_string_divisibility = function() {
  var combination;
  return combination = function(string) {
    if (string.length === 1) {
      return [string];
    }
  };
};

console.log(sub_string_divisibility());
